/**
 * Copyright 2010 Muzeum Historii Polski w Warszawie
 *
 * This file is part of PH100.
 *
 * PH100 is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * PH100 is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along
 * with PH100. If not, see <http://www.gnu.org/licenses/>.
 */


package PHControls;

import java.awt.Dimension;
import java.awt.event.KeyEvent;
import mhp_ph.mainForm;

/**
 *
 * @author szymek
 */
public class PHquickSearch extends javax.swing.JPanel {

    boolean stateOn = false;
    /** Creates new form PHquickSearch */
    public PHquickSearch() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputSearch = new javax.swing.JTextField();
        pHlupa1 = new PHControls.PHlupa();

        setBackground(new java.awt.Color(0, 0, 0));
        setPreferredSize(new java.awt.Dimension(354, 26));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inputSearch.setFont(new java.awt.Font("Trebuchet MS", 0, 10));
        inputSearch.setBorder(null);
        inputSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputSearchKeyPressed(evt);
            }
        });
        add(inputSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 5, 300, 14));

        pHlupa1.setBorder(null);
        pHlupa1.setText("pHlupa1");
        pHlupa1.setOpaque(false);
        pHlupa1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pHlupa1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pHlupa1MouseExited(evt);
            }
        });
        pHlupa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pHlupa1ActionPerformed(evt);
            }
        });
        add(pHlupa1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 5, 25, 16));
    }// </editor-fold>//GEN-END:initComponents

    private void pHlupa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pHlupa1ActionPerformed
        ((mainForm)getParent().getParent().getParent().getParent().getParent()).turnQuickOn();
    }//GEN-LAST:event_pHlupa1ActionPerformed

    private void inputSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputSearchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            main.quickSearch(inputSearch.getText());
        }
    }//GEN-LAST:event_inputSearchKeyPressed

    private void pHlupa1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pHlupa1MouseEntered
        evt.setSource(this);
        dispatchEvent(evt);
    }//GEN-LAST:event_pHlupa1MouseEntered

    private void pHlupa1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pHlupa1MouseExited
        evt.setSource(this);
        dispatchEvent(evt);
    }//GEN-LAST:event_pHlupa1MouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField inputSearch;
    private PHControls.PHlupa pHlupa1;
    // End of variables declaration//GEN-END:variables

    private mainForm main;

    public void setMainForm(mainForm form)
    {
        main = form;
    }

    public void changeState(boolean s)
    {
        stateOn = s;
        if (!stateOn)
            pHlupa1.imgName = "lupaOff.jpg";
        else
            pHlupa1.imgName = "lupaOn.jpg";

        pHlupa1.repaint();
    }

    @Override
    public Dimension getMaximumSize() {
        return new Dimension(355, 24);
    }


}
