/**
 * Copyright 2010 Muzeum Historii Polski w Warszawie
 *
 * This file is part of PH100.
 *
 * PH100 is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * PH100 is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along
 * with PH100. If not, see <http://www.gnu.org/licenses/>.
 */


package PHControls;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Rectangle;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import mhp_ph.phArt;
 

import javax.swing.GroupLayout;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JTextPane;
import javax.swing.LayoutStyle.ComponentPlacement;

/**
 *
 * @author szymek
 */
public class PHrecord extends javax.swing.JPanel {

    public phArt recordData = null;
    public enum vRec {simple, adv};
    public vRec state = vRec.simple;
    private Font font;
    private Color foreground;
    private Color background;
    /** Creates new form PHrecord */
    public PHrecord() {
        initComponents();
        font = new Font("Trebuchet MS", 0, 11);
        foreground = new Color(32, 32, 32);
        background = new Color(255, 255, 255);
        overrideLayoutSimple();
    }

    public void refreshData (phArt e, int n)
    {
        recordData = e;
        setFieldsDecoration();
        setFields(recordData, n);
    }

    public void setNumber(int n)
    {
        recNo.setText(String.valueOf(n));
    }

    JLabel recNo = new JLabel();
    JLabel title = new JLabel();
    JTextPane title2 = null;
    JTextPane longTitle = null;
    JLabel year = new JLabel();
    JLabel author = new JLabel();
    JTextPane longAuthor = null;
    JTextPane descr = null;
    JCheckBox select = new JCheckBox();
    String altTitle;
    String description;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(347, 10000));
        setMinimumSize(new java.awt.Dimension(347, 0));
        setPreferredSize(new java.awt.Dimension(347, 100));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 347, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    public void overrideLayoutSimple ()
    {
        if (longTitle != null)
        {
            longTitle.setVisible(false);
        }
        if (longAuthor != null)
        {
            longAuthor.setVisible(false);
        }
        if (descr != null)
        {
            descr.setVisible(false);
        }
        if (title2 != null)
        {
            title2.setVisible(false);
        }
        longTitle = null;
        longAuthor = null;
        descr = null;
        title2 = null;
        GroupLayout l1 = new GroupLayout(this);
        this.setMinimumSize(new Dimension(400, 3 * 14 + 25));
        this.setMaximumSize(new Dimension(400, 3 * 14 + 25));
        this.setPreferredSize(new Dimension(400, 3 * 14 + 25));
        this.setLayout(l1);
        l1.setAutoCreateContainerGaps(true);
        l1.setAutoCreateGaps(false);

        l1.setHorizontalGroup(
                l1.createSequentialGroup()
                    .addComponent(recNo,24,24,24)
                    .addGroup(l1.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        .addComponent(title, 323, 323, 323)
                        .addComponent(author, 323, 323, 323)
                        .addComponent(select, GroupLayout.Alignment.LEADING))
                    .addComponent(year, 32, 32, 32)
                );
        l1.setVerticalGroup(
                l1.createSequentialGroup()
                    .addGroup(l1.createParallelGroup()
                        .addComponent(recNo, 16, 16, 16)
                        .addComponent(title, 16, 16, 16))
                    .addGroup(l1.createParallelGroup()
                        .addComponent(author, 18, 18, 18)
                        .addComponent(year, 14, 14, 14))
                    .addGroup(l1.createParallelGroup()
                        .addComponent(select, GroupLayout.Alignment.LEADING))
                );

        recNo.setVisible(true);
        title.setVisible(true);
        author.setVisible(true);
        year.setVisible(true);
        select.setVisible(true);
        this.revalidate();
        this.repaint();
        state = vRec.simple;
    }

    public void overrideLayoutAdv ()
    {
        year.setVisible(false);
        title.setVisible(false);
        author.setVisible(false);
        setExtendedFields();
        GroupLayout l1 = new GroupLayout(this);
        this.setLayout(l1);
        int ht = 17;
        int ht2 = 17;
        int ha = 17;
        int hd = 17;
        try
        {
            longTitle.setSize(new Dimension(356, 14));
            longAuthor.setSize(new Dimension(356, 14));
            descr.setSize(new Dimension(356, 14));
            title2.setSize(new Dimension(356, 14));
            Rectangle r = longTitle.modelToView(longTitle.getDocument().getLength());
            ht = r.y + r.height;
            r = longAuthor.modelToView(longAuthor.getDocument().getLength());
            ha = r.y + r.height;
            r = descr.modelToView(descr.getDocument().getLength());
            hd = r.y + r.height;
            r = title2.modelToView(title2.getDocument().getLength());
            ht2 = r.y + r.height;
        }
        catch (Exception e)
        {
        }
        if (longAuthor.getText().isEmpty())
        {
            ha = 0;
            longAuthor.setVisible(false);
        }
        if (title2.getText().isEmpty())
        {
            ht2 = 0;
            title2.setVisible(false);
        }
        this.setMinimumSize(new Dimension(400, ht + ht2 + ha + hd + 14 + 28 + 6));
        this.setMaximumSize(new Dimension(400, ht + ht2 + ha + hd + 14 + 28 + 6));
        this.setPreferredSize(new Dimension(400, ht + ht2 + ha + hd + 14 + 28 + 6));
        l1.setAutoCreateContainerGaps(true);
        l1.setAutoCreateGaps(false);

        l1.setHorizontalGroup(
                l1.createSequentialGroup()
                    .addComponent(recNo,24,24,24)
                    .addGroup(l1.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        .addComponent(longTitle, 356, 356, 356)
                        .addComponent(title2, 356, 356, 356)
                        .addComponent(longAuthor, 356, 356, 356)
                        .addComponent(descr, 356, 356, 356)
                        .addComponent(select, GroupLayout.Alignment.LEADING))
                );
        l1.setVerticalGroup(
                l1.createSequentialGroup()
                    .addGroup(l1.createParallelGroup()
                        .addComponent(recNo, 16, 16, 16)
                        .addComponent(longTitle, ht + 2, ht + 2, ht + 2))
                    .addComponent(title2, ht2 + 4, ht2 + 4, ht2 + 4)
                    .addComponent(longAuthor, ha + 4, ha + 4, ha + 4)
                    .addComponent(descr, hd + 4, hd + 4, hd + 4)
                    .addComponent(select, 22, 22, 22)
                );

        recNo.setVisible(true);
        longTitle.setVisible(true);
        longAuthor.setVisible(true);
        title2.setVisible(true);
        descr.setVisible(true);
        select.setVisible(true);
        this.revalidate();
        this.repaint();
        state = vRec.adv;
    }

    public void setFieldsDecoration()
    {
        recNo.setOpaque(true);
        recNo.setFont(new Font("Trebuchet MS", 0, 10));
        recNo.setForeground(new Color(0, 0, 0));
        recNo.setBackground(new Color(222, 222, 222));
        recNo.setHorizontalAlignment(JLabel.CENTER);
        recNo.setVisible(true);
        recNo.setBorder(new javax.swing.border.LineBorder(new Color(255, 255, 255), 2));
        title.setFont(font);
        title.setForeground(foreground);
        title.setBackground(background);
        title.setVisible(true);
        author.setFont(font);
        author.setForeground(foreground);
        author.setBackground(background);
        author.setVisible(true);
        year.setFont(font);
        year.setForeground(foreground);
        year.setBackground(background);
        year.setVisible(true);
        select.setFont(font);
        select.setForeground(new Color(166, 166, 166));
        select.setBackground(background);
        select.setVisible(true);
        select.setIcon(PHsingleIcon.getIcon());
    }

    private void setExtendedFields()
    {
        title2 = new JTextPane();
        longTitle = new JTextPane();
        longAuthor = new JTextPane();
        descr = new JTextPane();
        title2.setText(altTitle);
        longTitle.setText(title.getText());
        longAuthor.setText(author.getText());
        descr.setText(description);
        longTitle.setFont(font);
        longTitle.setForeground(foreground);
        longTitle.setBackground(background);
        longTitle.setEditable(false);
        longTitle.setEnabled(false);
        longTitle.setDisabledTextColor(foreground);
        longTitle.setVisible(true);
        longTitle.setBorder(null);
        longAuthor.setFont(font);
        longAuthor.setForeground(foreground);
        longAuthor.setBackground(background);
        longAuthor.setEditable(false);
        longAuthor.setEnabled(false);
        longAuthor.setDisabledTextColor(foreground);
        longAuthor.setVisible(true);
        longAuthor.setBorder(null);
        descr.setFont(font);
        descr.setForeground(foreground);
        descr.setBackground(background);
        descr.setEditable(false);
        descr.setEnabled(false);
        descr.setDisabledTextColor(foreground);
        descr.setVisible(true);
        descr.setBorder(null);
        title2.setFont(font);
        title2.setForeground(foreground);
        title2.setBackground(background);
        title2.setEditable(false);
        title2.setEnabled(false);
        title2.setDisabledTextColor(foreground);
        title2.setVisible(true);
        title2.setBorder(null);
        longTitle.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                e.setSource(this);
                dispatchEvent(e);
            }
        });
        longAuthor.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                e.setSource(this);
                dispatchEvent(e);
            }
        });
        descr.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                e.setSource(this);
                dispatchEvent(e);
            }
        });
        title2.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                e.setSource(this);
                dispatchEvent(e);
            }
        });
    }

    public void setFields(mhp_ph.phArt e, int n)
    {
        recNo.setText(String.valueOf(n));
        title.setText(e.tytul);
        altTitle = e.tytul2;
        author.setText(e.autor);
        if (e.numer.compareTo("") == 0)
        {
            if (e.opis_f != null)
            {
                description = e.tom+" ("+e.rok+") "+e.opis_f.substring(6);
            } else {
                description = e.tom+" ("+e.rok+")";
            }
        } else {
            if (e.opis_f != null)
            {
                description = e.tom+" : "+e.numer+" ("+e.rok+") "+e.opis_f.substring(6);
            } else {
                description = e.tom+" : "+e.numer+" ("+e.rok+")";
            }
        }
        year.setText(e.rok.substring(0, 4));
        select.setText("Zaznacz");
    }
}
